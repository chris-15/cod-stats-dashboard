// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  matches       Match[]
  boSixMatches  BoSixMatch[]
}

model Match {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  gameMode  GameMode
  matchMap MatchMap
  kills     Int
  deaths    Int
  damage    Int?
  win       Boolean
  time      Int?     @default(0)
  plants    Int?
  defuses   Int?
  user      User     @relation(fields: [userEmail], references: [email])
  userEmail String
}

model BoSixMatch {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  gameMode  GameMode
  matchMap MatchMap
  kills     Int
  deaths    Int
  damage    Int?
  win       Boolean
  time      Int?     @default(0)
  plants    Int?
  defuses   Int?
  user      User     @relation(fields: [userEmail], references: [email])
  userEmail String
}

enum GameMode {
  Hardpoint
  Control
  SearchAndDestroy
}

enum MatchMap {
  Highrise
  Invasion
  Karachi
  Rio
  Skidrow
  Terminal
  SixStar
  SubBase
  Vista
  Hacienda
  Protocol
  RedCard
  Rewind
  Skyline
  Vault
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
